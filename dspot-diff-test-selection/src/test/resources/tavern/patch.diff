diff --git a/README.md b/README.md
index 1d4acb8..4ec2d45 100644
--- a/README.md
+++ b/README.md
@@ -1,58 +1,31 @@
 # Tavern
 
-This a a toy project for tutorial on usage of DSpot.
+This a a toy project for tutorial on usage of **DSpot**.
 
-There are two branches: `master` which is stable and `refactor` which contains regression bugs made during refactoring of the method **sellItem** of **fr.inria.stamp.tavern.Seller**.
+There are two branches: `master` which is stable and `refactor` which contains regression bugs made during the refactoring of the method **sellItem** of **fr.inria.stamp.tavern.Seller**.
 
-We suppose that you pulled DSpot from GitHub and build it in a parent directory:
-```
-.
-+-- dspot
-|   +-- target
-|   |   +-- dspot-1.0.0-jar-with-dependencies.jar
-+-- tavern
-|   +-- src
-|   |   +-- main
-|   |   |   +-- resources
-|   |   |   |   +-- tavern.properties
-```
-
-`tavern` is this project, pointing on the `master` branch
+Ensure that on both version the existing test suite is passing:
 
-Ensure that on both versions, the existing test suite is passing by running `mvn clean test`.
-
-You can find the property file to give as input to DSpot in `src/main/resources/`.
-```
-#relative path to the project root from dspot project
-project=../tavern
-#relative path to the source project from the project properties
-src=src/main/java/
-#relative path to the test source project from the project properties
-testSrc=src/test/java
-#java version used
-javaVersion=8
-#filter used to amplify specific test cases
-filter=fr.inria.stamp.*
-#path to the output folder
-outputDirectory=output
-#following properties are used by the ChangeDetectorSelector
-configPath=src/main/resources/tavern.properties
-folderPath=../tavern-refactor
+```sh
+mvn clean test
+git checkout refactor
+mvn clean test
+git checkout master
 ```
 
-First, run `dspot` using the **NumberLiteralAmplifier**, and the default selector **PitMutantScoreSelector** with the following command:
+First, run `dspot` using the **TestDataMutator**, and the default selector **PitMutantScoreSelector** with the following command:
 
 ```
-java -jar ../dspot/target/dspot-1.0.0-jar-with-dependencies.jar --path-to-properties ../tavern/src/main/resources/tavern.properties --iteration 2 --test fr.inria.stamp.MainTest --cases test --amplifiers NumberLiteralAmplifier --test-criterion PitMutantScoreSelector
+java -jar dspot-1.0.2-jar-with-dependencies.jar --path-to-properties src/main/resources/tavern.properties --iteration 2 --test fr.inria.stamp.MainTest --cases test --amplifiers TestDataMutator --test-criterion PitMutantScoreSelector --verbose --path-pit-result mutations_results/original.csv
 ```
 
-At the end of the execution, you obtain:
+At the end of the execution, you should obtain something like:
 ```
 ======= REPORT =======
-PitMutantScoreSelector:
-The original test suite kill 66 mutants
-The amplification results with 3 new tests
-it kill 4 more mutants
+PitMutantScoreSelector: 
+The original test suite kills 66 mutants
+The amplification results with 7 new tests
+it kills 48 more mutants
 ```
 
 You can now copy paste the amplified from output to src/test/java using:
@@ -82,12 +55,33 @@ You see a failing test. This test encodes the regression introduces during the r
 * `--iteration 2` &#10137; Number of time that the DSpot's main loop will be applied.
 * `--test fr.inria.stamp.MainTest` &#10137; The test class **fr.inria.stamp.MainTest** (full qualified name) to be amplified.
 * `--cases test` &#10137; The test method (test case) named **test** of the specified test class to be amplified.
-* `--amplifiers NumberLiteralAmplifier` &#10137; Class name of the amplifier used to modify input of the test.
+* `--amplifiers TestDataMutator` &#10137; Class name of the amplifier used to modify input of the test.
 * `--test-criterion PitMutantScoreSelector` &#10137; Class name of the selector used to filter which amplified test DSpot must keep.
+* `--verbose` &#10137; enable the verbose mode of **DSpot**.
+* `--path-pit-result mutations_results/original.csv` &#10137; use pre-computed mutation analysis of the original test suite.
+
+You can find the property file to give as input to DSpot in `src/main/resources/`.
+```
+#relative path to the project root from dspot project
+project=../tavern
+#relative path to the source project from the project properties
+src=src/main/java/
+#relative path to the test source project from the project properties
+testSrc=src/test/java
+#java version used
+javaVersion=8
+#filter used to amplify specific test cases
+filter=fr.inria.stamp.*
+#path to the output folder
+outputDirectory=output
+#following properties are used by the ChangeDetectorSelector
+configPath=src/main/resources/tavern.properties
+folderPath=../tavern-refactor
+```
 
 ### Mutation analysis results
 
-You can results of the mutations analysis in `mutations_results`:
+You can find results of the mutations analysis in `mutations_results`:
 
 * original.csv is the mutations analysis obtained used only the existing test.
 * amplified.csv is the mutations analysis obtained used both the original and the amplified version of test.
diff --git a/clean.sh b/clean.sh
new file mode 100755
index 0000000..08bb15e
--- /dev/null
+++ b/clean.sh
@@ -0,0 +1,3 @@
+
+rm -rf output/
+rm -f src/test/java/fr/inria/stamp/AmplMainTest.java
diff --git a/copy.sh b/copy.sh
new file mode 100755
index 0000000..5279a1c
--- /dev/null
+++ b/copy.sh
@@ -0,0 +1,2 @@
+
+cp -r output/fr src/test/java/
diff --git a/dspot-1.0.2-jar-with-dependencies.jar b/dspot-1.0.2-jar-with-dependencies.jar
new file mode 100644
index 0000000..b5c2423
Binary files /dev/null and b/dspot-1.0.2-jar-with-dependencies.jar differ
diff --git a/mutations_results/amplification.csv b/mutations_results/amplification.csv
new file mode 100644
index 0000000..a38eb50
--- /dev/null
+++ b/mutations_results/amplification.csv
@@ -0,0 +1,75 @@
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,17,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,18,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator,sellItem,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum9litNum230(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.MathMutator,sellItem,33,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum299(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,25,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,29,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,24,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,25,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,30,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum299(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,30,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,31,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,31,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum307(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,sellItem,25,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,sellItem,29,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,25,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,29,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE,sellItem,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF,sellItem,23,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF,sellItem,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum307(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,sellItem,35,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,sellItem,38,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum307(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator,sellItem,34,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,sellItem,33,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,<init>,20,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,18,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,19,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,20,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,buyItem,37,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,buyItem,36,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,buyItem,38,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,buyItem,37,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,buyItem,37,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum307(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,getGold,28,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,getName,24,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.MathMutator,giveGold,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum13litNum299(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,giveGold,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,giveGold,32,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,15,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,16,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,21,KILLED,fr.inria.stamp.AmplMainTest.testlitNum12litNum285(fr.inria.stamp.AmplMainTest)
diff --git a/mutations_results/diff.csv b/mutations_results/diff.csv
new file mode 100644
index 0000000..1b7af90
--- /dev/null
+++ b/mutations_results/diff.csv
@@ -0,0 +1,7 @@
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator,sellItem,32,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,31,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF,sellItem,32,SURVIVED,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,18,SURVIVED,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,buyItem,37,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,sellItem,38,NO_COVERAGE,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,getName,24,NO_COVERAGE,none
\ No newline at end of file
diff --git a/mutations_results/original.csv b/mutations_results/original.csv
new file mode 100644
index 0000000..c32b82d
--- /dev/null
+++ b/mutations_results/original.csv
@@ -0,0 +1,75 @@
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,17,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,18,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator,sellItem,32,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.MathMutator,sellItem,33,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,25,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,29,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,sellItem,32,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,24,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,25,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,30,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,30,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,31,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,sellItem,31,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,sellItem,25,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,sellItem,29,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,25,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,29,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE,sellItem,32,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF,sellItem,23,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF,sellItem,32,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,sellItem,35,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,sellItem,38,NO_COVERAGE,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator,sellItem,34,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,sellItem,33,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,43,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,<init>,20,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,18,SURVIVED,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,19,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,20,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator,buyItem,37,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,buyItem,36,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,buyItem,38,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE,buyItem,37,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,buyItem,37,SURVIVED,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,getGold,28,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,getName,24,NO_COVERAGE,none
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.MathMutator,giveGold,32,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,giveGold,32,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,giveGold,32,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Player.java,fr.inria.stamp.tavern.Player,org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator,toString,44,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,15,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator,<init>,16,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
+Item.java,fr.inria.stamp.tavern.Item,org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator,toString,21,KILLED,fr.inria.stamp.MainTest.test(fr.inria.stamp.MainTest)
diff --git a/mutations_results/remain_alive.csv b/mutations_results/remain_alive.csv
new file mode 100644
index 0000000..2d97c01
--- /dev/null
+++ b/mutations_results/remain_alive.csv
@@ -0,0 +1,2 @@
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,25,SURVIVED,none
+Seller.java,fr.inria.stamp.tavern.Seller,org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF,sellItem,29,SURVIVED,none
\ No newline at end of file
diff --git a/src/main/java/fr/inria/stamp/tavern/Seller.java b/src/main/java/fr/inria/stamp/tavern/Seller.java
index 03f669e..747f709 100644
--- a/src/main/java/fr/inria/stamp/tavern/Seller.java
+++ b/src/main/java/fr/inria/stamp/tavern/Seller.java
@@ -18,16 +18,22 @@ public class Seller {
 		this.items = itemsToSell;
 	}
 
-	public Item sellItem(String name, Player player) {
-		final Item itemToSell = this.items.stream()
-				.filter(item -> item.name.equals(name))
-				.findFirst()
-				.orElse(null);
-		if (itemToSell != null &&
-				player.getGold() > itemToSell.price) {
-			this.gold = this.gold + itemToSell.price;
-			player.giveGold(itemToSell.price);
-			return itemToSell;
+	public Item sellItem(String s, Player p) {
+		Item i = null;
+		for (int i2 = 0; i2 < this.items.size(); i2++) {
+			final Item i3 = this.items.get(i2);
+			if (i3.name.equals(s)) {
+				i = i3;
+			}
+		}
+		if (i != null) {
+			final Integer g_p = p.getGold();
+			final int value = g_p.compareTo(i.price);
+			if (value >= 0) {
+				this.gold = this.gold + i.price;
+				p.giveGold(i.price);
+				return i;
+			}
 		}
 		return null;
 	}
diff --git a/src/main/resources/tavern.properties b/src/main/resources/tavern.properties
index 3043b0b..9442200 100644
--- a/src/main/resources/tavern.properties
+++ b/src/main/resources/tavern.properties
@@ -10,6 +10,5 @@ javaVersion=8
 filter=fr.inria.stamp.*
 #path to the output folder
 outputDirectory=output
-#following properties are used by the ChangeDetectorSelector
 configPath=src/main/resources/tavern.properties
-folderPath=../tavern-refactor
\ No newline at end of file
+folderPath=../tavern-refactor

